const ifj = @import("ifj24.zig");

pub fn main() void {
    var a = ifj.readstr();

    ifj.write(a);
    ifj.write("\n");
    var str_after = ifj.string("--after");
    var str_before = ifj.string("befoere--");
    
    var len_after = ifj.length(str_after);
    ifj.write(ifj.concat(ifj.concat(ifj.concat("Sring and length: ", str_after), len_after), "\n"));

    var cc = ifj.concat(ifj.concat(str_before, a), str_after).
    ifj.write(cc);
    ifj.write("\n");

    cc = ifj.concat("", "");
    ifj.write(cc);
    ifj.write(ifj.length(cc));
    ifj.write("\n");

    var test = ifj.string("abcdef");
    ifj.write(ifj.concat(ifj.substring(test, 1, 3), "\n"));

    ifj.write("abeceda: ");
    
    var i = 65;
    while(90 >= i){
        var j = i;
        ifj.write(ifj.chr(j));
        i = i+      1;
    }
    ifj.write("\n");

    var a_len = ifj.length(a);
    var j = 0;
    while(a_len > j){
        ifj.write(ifj.concat(ifj.ord(j), "\n"));
        j = j + 1;
    }
}
